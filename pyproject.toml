[project]
name = "optimade-maker"
description = "Tools for making OPTIMADE APIs from raw structural data."
readme = "README.md"
requires-python = ">= 3.10, < 3.13"
license = { text = "MIT" }
keywords = ["optimade", "jsonapi", "materials"]
dynamic = ["version"]

classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Intended Audience :: Science/Research",
  "Topic :: Database",
  "Topic :: Scientific/Engineering",
]

dependencies = [
  "pydantic~=2.2",
  "optimade[server]~=1.1",
  "pyyaml~=6.0",
  "tqdm~=4.65",
  "requests~=2.31",
  "numpy >= 1.22, < 3",
  "click~=8.1",
]

[project.scripts]
optimake = "optimade_maker.cli:cli"

[build-system]
requires = ["setuptools >= 62", "setuptools_scm ~= 8.1", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
fallback_version = "0.1.0"
version_scheme = "post-release"

[project.optional-dependencies]
ase = ["ase ~= 3.22"]
pymatgen = ["pymatgen >= 2023.9"]
pandas = ["pandas >= 1.5, < 3"]
aiida = ["aiida-core >= 2.6.3"]
core = ["optimade-maker[ase,pymatgen,pandas]"]
ingest = ["optimade-maker[ase,pymatgen,pandas,aiida]"]
tests = ["pytest~=8.3", "pytest-cov~=6.0"]
dev = ["ruff", "pre-commit", "mypy"]

[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "W", "Q"]
ignore = ["E501", "E402"]
fixable = ["A", "B", "C", "D", "E", "F", "I"]
unfixable = []
per-file-ignores = {}
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.isort]
known-first-party = ["optimade_maker"]

[tool.mypy]
plugins = "pydantic.mypy"
ignore_missing_imports = true
follow_imports = "skip"
